-- -- bootstrap
-- local ensure_packer = function()
--     local fn = vim.fn
--     local install_path = fn.stdpath('data') .. '/site/pack/packer/start/packer.nvim'
--     if fn.empty(fn.glob(install_path)) > 0 then
--         fn.system({ 'git', 'clone', '--depth', '1', 'https://github.com/wbthomason/packer.nvim', install_path })
--         vim.cmd [[packadd packer.nvim]]
--         return true
--     end
--     return false
-- end
--
-- local packer_bootstrap = ensure_packer() -- Only required if you have packer configured as `opt`
--
-- return require('packer').startup(function(use)
--     -- Packer can manage itself
--     -- trying not to use
--     use { "p00f/nvim-ts-rainbow" }
--     -- Lsp
--     use { 'VonHeikemen/lsp-zero.nvim',
--         requires = {
--             -- LSP Support
--             { 'neovim/nvim-lspconfig' },
--             { 'williamboman/mason.nvim' },
--             { 'williamboman/mason-lspconfig.nvim' },
--             -- Autocompletion
--             { 'hrsh7th/nvim-cmp' },
--             { 'hrsh7th/cmp-buffer' },
--             { 'hrsh7th/cmp-path' },
--             { 'saadparwaiz1/cmp_luasnip' },
--             { 'hrsh7th/cmp-nvim-lsp' },
--             { 'hrsh7th/cmp-nvim-lua' },
--             -- Snippets
--             { 'L3MON4D3/LuaSnip' },
--             { 'rafamadriz/friendly-snippets' },
--         }
--     }
--     use { "windwp/nvim-autopairs",
--         config = function()
--             require("nvim-autopairs").setup()
--         end
--     }
--     -- install without yarn or npm
--     use { "folke/trouble.nvim",
--         requires = { "kyazdani42/nvim-web-devicons" },
--         tag = 'v2.*',
--         config = function()
--             require("trouble").setup()
--             -- your configuration comes here
--             -- or leave it empty to use the default settings
--             -- refer to the configuration section below
--         end
--     }
--     use { 'nvim-lualine/lualine.nvim',
--         requires = {
--             'kyazdani42/nvim-web-devicons',
--             opt = true
--         }
--     }
--
--     if packer_bootstrap then
--         require('packer').sync()
--     end
-- end)
